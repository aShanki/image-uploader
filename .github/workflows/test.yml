name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        go-version: [1.21.x]

    services:
      backend:
        image: golang:${{ matrix.go-version }}
        ports:
          - 4001:4001

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          cache: true
          cache-dependency-path: backend/go.sum

      - name: Install dependencies (Frontend)
        run: |
          cd frontend
          npm ci

      - name: Install dependencies (Backend)
        run: |
          cd backend
          go mod download

      - name: Install Playwright Browsers
        run: |
          cd frontend
          npx playwright install --with-deps chromium
        
      - name: Create test directories
        run: |
          sudo mkdir -p /home/synthetix/images
          sudo chmod 777 /home/synthetix/images

      - name: Setup environment
        run: |
          cp frontend/.env.local.example frontend/.env.local
          echo "AUTH_USERNAME=admin" >> frontend/.env.local
          echo "AUTH_PASSWORD=secure_password_here" >> frontend/.env.local
          echo "NEXT_PUBLIC_API_URL=http://localhost:4001" >> frontend/.env.local

      - name: Start backend server
        run: |
          cd backend
          go run main.go &
          sleep 5  # Wait for server to start

      - name: Run tests
        run: |
          cd frontend
          npm run test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker images
        run: docker-compose build

      - name: Test Docker Compose
        run: |
          docker-compose up -d
          sleep 10  # Wait for services to start
          curl -f http://localhost:4001 || exit 1
          docker-compose down

      - name: Archive Docker Compose logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose-logs
          path: |
            backend/logs/
            frontend/logs/
          retention-days: 7